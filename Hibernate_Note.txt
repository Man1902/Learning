----- Vesrion :  5.2.7
- Hibernate is an open source, lightweight, ORM (Object Relational Mapping) tool.
- ORM is a programming technique for converting data between relational databases(RDBMS) and object oriented programming languages.
- 
- It is a programming technique that maps the object to the data stored in the database.
- Java Application -> object -> ORM -> Database
- The ORM tool internally uses the JDBC API to interact with the database.
- Fast performance : The performance of hibernate framework is fast because cache is internally used in hibernate framework. 
  Two types of cache in hibernate framework. first level cache (enabled bydefault) and second level cache.
- Database Independent query : HQL (Hibernate Query Language) is the object-oriented version of SQL. It generates the database independent queries. 
  So we don't need to write database specific queries (If database is changed).
- Hibernate supports Query cache and provide statistics about query and database status.
- Application layer -> hibernate framework layer -> backhand api layer -> database layer
- The SessionFactory is a factory of session and client of ConnectionProvider. It holds second level cache (optional) of data. 
  SessionFactory is a thread-safe object, many threads cannot access it simultaneously.
- The session object provides an interface between the application and data stored in the database. It is a short-lived object and wraps the JDBC connection. It is factory of Transaction, Query and Criteria. 
  It holds a first-level cache (mandatory) of data. The org.hibernate.Session interface provides methods to insert, update and delete the object. It also provides factory methods for Transaction, Query and Criteria.
  Session is not a thread-safe object, many threads can access it simultaneously. In other words, you can share it between threads.
- @Entity annotation marks this class as an entity.
- @Table annotation specifies the table name where data of this entity is to be persisted. If you don't use @Table annotation, hibernate will use the class name as the table name bydefault.
- @Id annotation marks the identifier for this entity.
- @Column annotation specifies the details of the column for this property or field. If @Column annotation is not specified, property name will be used as the column name bydefault.
- Generator classes in Hibernate : 
1) assigned : It is the default generator class used by the hibernate.Here,programmer is responsible for assigning the primary key value to object which is going to save into the database.It is supported in all the databases.
   e.g <generator class = "assigned"/>
2) increment : Max ID Value +1.It is supported in all the databases. e.g <generator class = "increment"/>
3) sequence : Not supported with MySql. e.g <generator class="sequence"><param name="sequence">Sequence Name</param></generator>
   If the programmer has not passed any sequence name, then hibernate creates its own sequence with name “Hibernate-Sequence” and gets next value from that sequence.
   But remember, if hibernate want’s to create its own sequence, in hibernate configuration file, hbm2ddl.auto property must be set enabled.
4) identity : it is database dependent,not supported in oracle.the id value is generated by the database, but not by the hibernate.
5) hilo : database independent. starts with 1, second will be 32768 and then increment by 32768.
6) native : Order will be identity , sequence , hillo   
- Table per hierarchy mapping : single table is required to map the whole hierarchy, an extra column (known as discriminator column) is added to identify the class. But nullable values are stored in the table.
- Table per concrete class : tables are created as per class.But duplicate column is added in subclass tables.
- Table Per Subclass : tables are created as per class but related by foreign key. So there are no duplicate columns.
- List and Map are index based collection, so an extra column will be created in the table for indexing.
- session.get() : Returns null if object is not found. It always hit the database. It returns real object not proxy.
- session.load(): Throws ObjectNotFoundException if object is not found. It doesn't hit the database. It returns proxy object. 
